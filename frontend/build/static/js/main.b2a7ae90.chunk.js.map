{"version":3,"sources":["api.ts","shared/Main.styled.ts","styles/colors.ts","styles/texts.ts","designSystem/CardList/CardList.styled.ts","designSystem/Menu/Menu.styled.ts","designSystem/Menu/Menu.tsx","designSystem/DotsMenuButton/DotsMenuButton.tsx","designSystem/Modal/Modal.tsx","designSystem/CardList/CardList.tsx","styles/breakpoints.ts","shared/Header.styled.ts","util/useIsMobile.ts","shared/Header.tsx","designSystem/Form/Form.styled.ts","tigers/TigerForm.tsx","tigers/CreateTiger.tsx","designSystem/BurgerButton/BurgerButton.styled.ts","designSystem/BurgerButton/BurgerButton.tsx","shared/Sidebar.styled.tsx","shared/Sidebar.tsx","shared/TopBar.styled.tsx","shared/TopBar.tsx","shared/AppLayout.styled.tsx","shared/AppLayout.tsx","tigers/TigerHeader.tsx","designSystem/EmptyPlaceholder/EmptyPlaceholder.styled.ts","designSystem/EmptyPlaceholder/EmptyPlaceholder.tsx","tigers/UpdateTiger.tsx","tigers/ListTiger.tsx","shared/BackgroundLayout.styled.tsx","shared/BackgroundLayout.tsx","auth/LoginForm.tsx","auth/LoginPage.tsx","auth/RegisterForm.tsx","auth/RegisterPage.tsx","App.styled.tsx","App.tsx","index.tsx"],"names":["CSRF_TOKEN_NAME","CSRF_HEADER_NAME","cookie","name","document","split","find","entry","client","axios","create","headers","value","reduce","Main","styled","main","COLORS","LargeHeader","h1","MediumHeader","h2","SmallHeader","h3","Text","div","Link","ReactRouterLink","CardListUl","ul","CardListItemLi","li","CardListItemTitle","DotsClickArea","DotsIcon","img","Icon","StyledMenu","Menu","StyledMenuItem","MenuItem","applyStatics","ReactMenuMenuItem","withMenuItem","className","onClick","children","props","button","menuButton","direction","css","DotsMenuButton","Dots","React","forwardRef","ref","src","ReactModal","setAppElement","defaultStyles","overlay","backgroundColor","content","borderRadius","padding","customStyles","top","left","right","bottom","marginRight","transform","Modal","isOpen","onRequestClose","style","CardListItem","id","title","onDelete","renderEditModalContent","useState","modalIsOpen","setModalIsOpen","undefined","CardList","BREAKPOINTS","HeaderTitle","HeaderContainer","SearchBoxContainer","SearchIcon","SearchBoxInput","input","NewButtonButton","PlusIcon","useIsMobile","window","innerWidth","isMobile","setIsMobile","useEffect","handleResize","newIsMobile","addEventListener","removeEventListener","SearchBox","onChange","type","placeholder","NewButton","Header","FormCard","Form","TextBlock","InputFormControl","FormInput","Field","FormLabel","SubmitButton","ErrorMessage","TigerForm","tiger","onSubmit","submitText","initialValues","validate","isSubmitting","autofocus","disabled","CreateTiger","queryClient","useQueryClient","history","useHistory","createTiger","useMutation","values","post","onSuccess","invalidateQueries","setSubmitting","mutate","push","BurgerButtonIcon","BurgerButton","SidebarOverlay","SidebarContainer","SidebarTitle","ArrowLeftButton","NavMenu","nav","NavLink","ReactRouterNavLink","Sidebar","useContext","SidebarIsOpenContext","sidebarIsOpen","setSidebarIsOpen","to","TopBarContainer","ProfileDropDownContainer","ProfilePhoto","Username","ProfileDropDown","userData","useQuery","get","then","data","retry","logoutMutation","username","TopBar","AppContainer","MainContainer","createContext","AppLayout","sidebarIsOpenContext","useMemo","useSidebarIsOpenContext","Provider","TigerHeader","useTigersSearchQuery","tigersSearchQuery","setTigersSearchQuery","event","target","EmptyPlaceholderContainer","EmptyPlaceholderIcon","EmptyPlaceholderText","EmptyPlaceholderButton","EmptyPlaceholder","buttonText","text","UpdateTiger","response","isLoading","updateTiger","put","TigersSearchQueryContext","ListTigers","tigersSearchQueryContext","useTigersSearchQueryContext","tigersQuery","deleteTiger","delete","filter","includes","map","length","GlobalBackground","styles","Title","BackgroundLayout","Login","error","setError","handleError","message","handleSubmit","a","password","autoFocus","LoginPage","LoginForm","Register","api","email","passwordConfirm","RegisterPage","RegisterForm","GlobalStyles","App","onError","replace","defaults","catch","console","warn","from","exact","path","component","ListTiger","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","getElementById"],"mappings":"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","file":"static/js/main.b2a7ae90.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst CSRF_TOKEN_NAME = 'csrf-token'\nconst CSRF_HEADER_NAME = 'CSRF-Token'\n\n/**\n * cookie\n * Returns the value of the first cookie matching name `name`\n * or undefined.\n */\nexport function cookie(name: string): string | undefined {\n  // Inspired from\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie#example_2_get_a_sample_cookie_named_test2\n  return document.cookie\n    .split('; ')\n    .find((entry) => entry?.split('=')[0] === name)\n    ?.split('=')[1]\n}\n\nexport function hasCSRFToken() {\n  return cookie(CSRF_TOKEN_NAME)\n}\n\nexport function fetchCSRFToken() {\n  client\n    .get('/auth/csrf')\n    .then(() => {\n      client.defaults.headers[CSRF_HEADER_NAME] = cookie(CSRF_TOKEN_NAME)\n    })\n    .catch((error) => {\n      console.warn('Received error while fetching CSRF token :', error)\n    })\n}\n\ntype HeaderEntry = {\n  [name: string]: string\n}\n\nconst client = axios.create({\n  headers: [\n    {\n      name: CSRF_HEADER_NAME,\n      value: cookie(CSRF_TOKEN_NAME),\n    },\n  ].reduce<HeaderEntry>((headers, entry) => {\n    if (entry.value) {\n      headers[entry.name] = entry.value\n    }\n    return headers\n  }, {}),\n})\n\nexport default client\n","import styled from '@emotion/styled'\n\nexport const Main = styled.main`\n  padding: 32px;\n  flex-grow: 1;\n`\n","export const COLORS = {\n  BLUE: '#3B49C4',\n  BLUE_LIGHT: '#8389c6',\n  BLUE_TEXT: '#D0D5FF',\n  GREY_SLIGHTLY_DARK: '#D1D1D1',\n  GREY: '#DEDEDE',\n  WHITE: '#ffffff',\n  OVERLAY_LIGHT: 'rgba(255,255,255,0.05)',\n  GREY_TRANSPARENT: 'rgba(235,235,239,0.71)',\n  GREY_LIGHT: '#EBEBEF',\n  GREY_DARK: '#818498',\n  TEXT: '#2A2B31',\n  BLUE_DARK: '#12163A',\n  RED: '#f33e3e',\n}\n","import styled from '@emotion/styled'\nimport { Link as ReactRouterLink } from 'react-router-dom'\nimport { COLORS } from './colors'\n\nexport const LargeHeader = styled.h1`\n  font-size: 32px;\n`\n\nexport const MediumHeader = styled.h2`\n  font-size: 24px;\n`\n\nexport const SmallHeader = styled.h3`\n  font-size: 20px;\n`\n\nexport const Text = styled.div`\n  font-size: 14px;\n`\n\nexport const Link = styled(ReactRouterLink)`\n  color: ${COLORS.BLUE};\n  font-weight: 700;\n  text-decoration: none;\n`\n","import styled from '@emotion/styled'\nimport { COLORS } from '../../styles/colors'\nimport { Text } from '../../styles/texts'\n\nexport const CardListUl = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`\n\nexport const CardListItemLi = styled.li`\n  height: 72px;\n  box-shadow: 0 10px 50px -16px rgba(0, 0, 0, 0.05);\n  border-radius: 4px;\n  background-color: ${COLORS.WHITE};\n  margin: 16px 0 16px 0;\n  display: flex;\n  align-items: center;\n  padding: 0 32px 0 32px;\n\n  &:first-child {\n    margin-top: 0;\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n\nexport const CardListItemTitle = styled(Text)`\n  color: ${COLORS.TEXT};\n`\n\nexport const DotsClickArea = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  position: relative;\n  cursor: pointer;\n  margin-left: auto;\n\n  &:hover {\n    background-color: ${COLORS.GREY_TRANSPARENT};\n  }\n`\n\nexport const DotsIcon = styled.img`\n  cursor: pointer;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nexport const Icon = styled.img`\n  width: 16px;\n  margin-right: 8px;\n`\n","import styled from '@emotion/styled'\nimport { Menu, MenuItem } from '@szhsin/react-menu'\n\nexport const StyledMenu = styled(Menu)``\n\nexport const StyledMenuItem = styled(MenuItem)`\n  padding: 0.375rem 1rem;\n`\n","import React, { FC } from 'react'\nimport {\n  applyStatics,\n  ClickEvent,\n  MenuItem as ReactMenuMenuItem,\n  MenuProps as ReactMenuMenuProps,\n} from '@szhsin/react-menu'\nimport { StyledMenu, StyledMenuItem } from './Menu.styled'\nimport { css } from '@emotion/css'\n\n/**\n * A dropdown menu that appears when clicking on a button.\n * Usage :\n * ```jsx\n * <Menu button={<SomeClickableButton/>}>\n *     <MenuItem>One</MenuItem>\n *     <MenuItem>Two</MenuItem>\n * </Menu>\n * ```\n */\n\ntype MenuItemProps = {\n  className?: string\n  onClick: (event: ClickEvent) => void\n}\n\n// https://szhsin.github.io/react-menu/docs#utils-apply-hoc\nconst withMenuItem = applyStatics<FC<MenuItemProps>>(ReactMenuMenuItem)\n\nconst MenuItemComponent: FC<MenuItemProps> = ({\n  className,\n  onClick,\n  children,\n  ...props\n}) => (\n  <StyledMenuItem className={className} onClick={onClick} {...props}>\n    {children}\n  </StyledMenuItem>\n)\n\nexport const MenuItem: FC<MenuItemProps> = withMenuItem(MenuItemComponent)\n\ntype MenuProps = {\n  button: React.ReactElement\n} & Partial<ReactMenuMenuProps>\n\nconst Menu: FC<MenuProps> = ({ children, button, ...props }) => (\n  <StyledMenu\n    menuButton={button}\n    direction='left'\n    className={css`\n      min-width: auto;\n    `}\n    {...props}\n  >\n    {children}\n  </StyledMenu>\n)\n\nexport default Menu\n","import React, { FC, SyntheticEvent } from 'react'\nimport { DotsClickArea, DotsIcon } from '../CardList/CardList.styled'\nimport Menu from '../Menu/Menu'\n\nexport { MenuItem as DotsMenuItem } from '../Menu/Menu'\n\nexport const DotsMenuButton: FC = ({ children }) => (\n  <Menu button={<Dots />}>{children}</Menu>\n)\n\ntype DotProps = {\n  onClick?: (event: SyntheticEvent) => void\n}\n\nconst Dots: FC<DotProps> = React.forwardRef<HTMLDivElement, DotProps>(\n  ({ ...props }, ref) => (\n    <DotsClickArea ref={ref} {...props}>\n      <DotsIcon src='images/dots.svg' />\n    </DotsClickArea>\n  )\n)\n","import React, { FC, SyntheticEvent } from 'react'\nimport ReactModal from 'react-modal'\n\nReactModal.setAppElement('#root')\n\nif (ReactModal.defaultStyles.overlay) {\n  ReactModal.defaultStyles.overlay.backgroundColor = 'rgba(0,0,0,0.5)'\n}\nif (ReactModal.defaultStyles.content) {\n  ReactModal.defaultStyles.content.borderRadius = '16px'\n  ReactModal.defaultStyles.content.padding = '32px'\n}\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n}\n\ntype Props = {\n  isOpen: boolean\n  onRequestClose: (event: SyntheticEvent) => void\n}\n\nconst Modal: FC<Props> = ({ children, isOpen, onRequestClose }) => {\n  return (\n    <ReactModal\n      isOpen={isOpen}\n      style={customStyles}\n      onRequestClose={onRequestClose}\n    >\n      {children}\n    </ReactModal>\n  )\n}\n\nexport default Modal\n","import React, { FC, useState, ReactElement } from 'react'\nimport {\n  CardListItemLi,\n  CardListItemTitle,\n  CardListUl,\n  Icon,\n} from './CardList.styled'\nimport '@szhsin/react-menu/dist/index.css'\nimport { css } from '@emotion/css'\nimport { COLORS } from '../../styles/colors'\nimport { DotsMenuButton, DotsMenuItem } from '../DotsMenuButton/DotsMenuButton'\nimport Modal from '../Modal/Modal'\n\ntype RenderEditModalContentArgs = {\n  setModalIsOpen: (value: boolean) => void\n}\n\ntype CardListItemProps = {\n  title: string\n  id?: string | number\n  onDelete?: () => void\n  renderEditModalContent: ({\n    setModalIsOpen,\n  }: RenderEditModalContentArgs) => ReactElement | null\n}\n\nexport const CardListItem: FC<CardListItemProps> = ({\n  id,\n  title,\n  onDelete,\n  renderEditModalContent,\n}) => {\n  const [modalIsOpen, setModalIsOpen] = useState<boolean>(false)\n\n  if (id === undefined) {\n    return null\n  }\n\n  return (\n    <CardListItemLi>\n      <CardListItemTitle>{title}</CardListItemTitle>\n      <DotsMenuButton>\n        <DotsMenuItem onClick={() => setModalIsOpen(true)}>\n          <Icon src='/images/pen.svg' />\n          Edit\n        </DotsMenuItem>\n        <DotsMenuItem\n          className={css`\n            color: ${COLORS.RED};\n          `}\n          onClick={() => {\n            onDelete?.()\n          }}\n        >\n          <Icon src='/images/trash.svg' />\n          Delete\n        </DotsMenuItem>\n      </DotsMenuButton>\n      <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n        {renderEditModalContent({ setModalIsOpen })}\n      </Modal>\n    </CardListItemLi>\n  )\n}\n\nconst CardList: FC = ({ children }) => <CardListUl>{children}</CardListUl>\n\nexport default CardList\n","export const BREAKPOINTS: Record<string, number> = {\n  MD: 769,\n}\n","import styled from '@emotion/styled'\nimport { SmallHeader } from '../styles/texts'\nimport { COLORS } from '../styles/colors'\nimport { BREAKPOINTS } from '../styles/breakpoints'\n\nexport const HeaderTitle = styled(SmallHeader)`\n  margin-right: auto;\n`\n\nexport const HeaderContainer = styled.div`\n  height: 104px;\n  padding: 32px 40px;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);\n  box-sizing: border-box;\n  background-color: ${COLORS.WHITE};\n`\n\nexport const SearchBoxContainer = styled.div`\n  height: 40px;\n  position: relative;\n`\n\nexport const SearchIcon = styled.img`\n  position: absolute;\n  top: 50%;\n  transform: translate(19px, -50%);\n`\n\nexport const SearchBoxInput = styled.input`\n  border: none;\n  box-shadow: none;\n  border-radius: 8px;\n  padding: 10px 10px 10px 40px;\n  box-sizing: border-box;\n  background-color: ${COLORS.GREY_LIGHT};\n  height: 40px;\n`\n\nexport const NewButtonButton = styled.button`\n  border: none;\n  box-shadow: none;\n  height: 40px;\n  background-color: ${COLORS.BLUE};\n  padding: 12px;\n  color: ${COLORS.WHITE};\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 8px;\n  margin-left: 16px;\n  cursor: pointer;\n  display: flex;\n  white-space: nowrap;\n`\n\nexport const PlusIcon = styled.img`\n  margin-left: 20px;\n\n  @media (max-width: ${BREAKPOINTS.MD}px) {\n    margin: 0;\n  }\n`\n","import { useEffect, useState } from 'react'\nimport { BREAKPOINTS } from '../styles/breakpoints'\n\nexport const useIsMobile = () => {\n  const [isMobile, setIsMobile] = useState<boolean>(\n    window.innerWidth < BREAKPOINTS.MD\n  )\n\n  useEffect(() => {\n    const handleResize = () => {\n      const newIsMobile = window.innerWidth < BREAKPOINTS.MD\n      if (newIsMobile !== isMobile) {\n        setIsMobile(newIsMobile)\n      }\n    }\n\n    window.addEventListener('resize', handleResize)\n\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isMobile, setIsMobile])\n\n  return isMobile\n}\n","import React, { ChangeEvent, FC, HTMLAttributes } from 'react'\nimport {\n  HeaderContainer,\n  NewButtonButton,\n  PlusIcon,\n  SearchBoxContainer,\n  SearchBoxInput,\n  SearchIcon,\n} from './Header.styled'\nimport { useIsMobile } from '../util/useIsMobile'\n\nexport { HeaderTitle } from './Header.styled'\n\ntype SearchBoxProps = {\n  value: string\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const SearchBox: FC<SearchBoxProps> = ({ value, onChange }) => (\n  <SearchBoxContainer>\n    <SearchIcon src='/images/search.svg' />\n    <SearchBoxInput\n      type='text'\n      placeholder='Search ...'\n      value={value}\n      onChange={onChange}\n    />\n  </SearchBoxContainer>\n)\n\nexport const NewButton: FC<HTMLAttributes<HTMLButtonElement>> = ({\n  children,\n  ...props\n}) => {\n  const isMobile = useIsMobile()\n  return (\n    <NewButtonButton {...props}>\n      {!isMobile && children}\n      <PlusIcon src='/images/plus.svg' />\n    </NewButtonButton>\n  )\n}\n\nconst Header: FC = ({ children }) => (\n  <HeaderContainer>{children}</HeaderContainer>\n)\n\nexport default Header\n","import { Field, Form } from 'formik'\nimport styled from '@emotion/styled'\nimport { Text } from '../../styles/texts'\nimport { COLORS } from '../../styles/colors'\nimport { BREAKPOINTS } from '../../styles/breakpoints'\n\nexport const FormCard = styled(Form)`\n  background-color: ${COLORS.WHITE};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 16px;\n  max-width: 335px;\n  padding: 32px;\n  box-sizing: border-box;\n\n  @media (max-width: ${BREAKPOINTS.MD}px) {\n    margin: 24px auto 64px auto;\n  }\n`\n\nexport const TextBlock = styled(Text)`\n  padding: 16px 0 16px 0;\n  margin: 10px 0 10px 0;\n`\n\nexport const InputFormControl = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  margin: 10px 0 10px 0;\n`\n\nexport const FormInput = styled(Field)`\n  border: 1px solid ${COLORS.GREY};\n  border-radius: 4px;\n  height: 40px;\n  margin-top: 10px;\n  width: 100%;\n  font-size: 14px;\n  color: ${COLORS.TEXT};\n  padding-left: 16px;\n  box-sizing: border-box;\n`\n\nexport const FormLabel = styled(Text)``\n\nexport const SubmitButton = styled.button`\n  box-shadow: none;\n  border: none;\n  color: ${COLORS.WHITE};\n  background-color: ${COLORS.BLUE};\n  border-radius: 8px;\n  padding: 18px;\n  cursor: pointer;\n\n  &:active {\n    background-color: ${COLORS.BLUE_LIGHT};\n  }\n`\n\nexport const ErrorMessage = styled(Text)`\n  color: ${COLORS.RED};\n`\n","import React from 'react'\nimport { Formik, FormikHelpers } from 'formik'\nimport { Tiger } from '../types'\nimport {\n  FormCard,\n  FormInput,\n  FormLabel,\n  InputFormControl,\n  SubmitButton,\n} from '../designSystem/Form/Form'\nimport { MediumHeader } from '../styles/texts'\nimport { css } from '@emotion/css'\n\ntype CreateProps = {\n  tiger?: Tiger\n  onSubmit: (values: Tiger, helpers: FormikHelpers<Tiger>) => void\n  title: string\n  submitText: string\n}\n\nfunction TigerForm({ tiger, onSubmit, title, submitText }: CreateProps) {\n  const initialValues: Tiger = {\n    name: tiger ? tiger.name : '',\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={() => {\n        return {}\n      }}\n      onSubmit={onSubmit}\n    >\n      {({ isSubmitting }) => (\n        <FormCard>\n          <MediumHeader\n            className={css`\n              text-align: center;\n              margin: 0;\n            `}\n          >\n            {title}\n          </MediumHeader>\n\n          <InputFormControl\n            className={css`\n              margin: 16px 0 16px 0;\n            `}\n          >\n            <FormLabel>Name</FormLabel>\n            <FormInput type='text' name='name' placeholder='Name' autofocus />\n          </InputFormControl>\n\n          <SubmitButton\n            type='submit'\n            disabled={isSubmitting}\n            className={css`\n              margin-top: 32px;\n            `}\n          >\n            {submitText}\n          </SubmitButton>\n        </FormCard>\n      )}\n    </Formik>\n  )\n}\n\nexport default TigerForm\n","import client from '../api'\nimport { FormikHelpers } from 'formik'\nimport React, { FC } from 'react'\nimport { useMutation, useQueryClient } from 'react-query'\nimport { Tiger, TigerError } from '../types'\nimport TigerForm from './TigerForm'\nimport { useHistory } from 'react-router-dom'\n\ntype Props = {\n  onSubmit?: () => void\n}\n\nconst CreateTiger: FC<Props> = ({ onSubmit }) => {\n  const queryClient = useQueryClient()\n  const history = useHistory()\n  const createTiger = useMutation<Tiger, TigerError, Tiger>(\n    (values) => {\n      return client.post('/api/v1/tigers', values)\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('tigers')\n      },\n    }\n  )\n\n  const handleSubmit = (\n    values: Tiger,\n    { setSubmitting }: FormikHelpers<Tiger>\n  ) => {\n    createTiger.mutate(values)\n    setSubmitting?.(false)\n    onSubmit?.()\n    history.push('/tigers')\n  }\n\n  return (\n    <TigerForm\n      title='Create Tiger'\n      submitText='Create a Tiger'\n      onSubmit={handleSubmit}\n    />\n  )\n}\n\nexport default CreateTiger\n","import styled from '@emotion/styled'\n\nexport const BurgerButtonIcon = styled.img`\n  cursor: pointer;\n  margin-right: 48px;\n`\n","import { BurgerButtonIcon } from './BurgerButton.styled'\nimport { FC, HTMLAttributes } from 'react'\n\nconst BurgerButton: FC<HTMLAttributes<HTMLImageElement>> = (props) => (\n  <BurgerButtonIcon src='/images/burger_menu.svg' {...props} />\n)\n\nexport default BurgerButton\n","import styled from '@emotion/styled'\nimport { COLORS } from '../styles/colors'\nimport { MediumHeader } from '../styles/texts'\nimport { NavLink as ReactRouterNavLink } from 'react-router-dom'\nimport { BREAKPOINTS } from '../styles/breakpoints'\n\nexport const SidebarOverlay = styled.div`\n  position: absolute;\n  min-width: 100vw;\n  min-height: 100vh;\n  z-index: 1;\n`\n\ntype SidebarContainerProps = {\n  isOpen: boolean\n}\n\nexport const SidebarContainer = styled.div<SidebarContainerProps>`\n  width: 240px;\n  height: 100vh;\n  background-color: ${COLORS.BLUE_DARK};\n\n  @media (max-width: ${BREAKPOINTS.MD}px) {\n    position: absolute;\n    transition: left 0.3s;\n    will-change: left;\n    left: ${(props) => (props.isOpen ? 0 : -240)}px;\n    z-index: 2;\n  }\n`\n\nexport const SidebarTitle = styled(MediumHeader)`\n  color: ${COLORS.BLUE_TEXT};\n  font-weight: normal;\n  text-align: center;\n  margin-top: 16px;\n`\n\nexport const ArrowLeftButton = styled.img`\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  cursor: pointer;\n`\n\nexport const NavMenu = styled.nav`\n  display: flex;\n  flex-direction: column;\n  margin-top: 136px;\n`\n\nexport const NavLink = styled(ReactRouterNavLink)`\n  color: ${COLORS.BLUE_TEXT};\n  font-size: 14px;\n  text-decoration: none;\n  padding: 20px 14px;\n  margin: 0 8px 0 8px;\n  border-radius: 8px;\n\n  &.active {\n    background-color: ${COLORS.OVERLAY_LIGHT};\n  }\n`\n","import React, { useContext } from 'react'\nimport {\n  ArrowLeftButton,\n  NavLink,\n  NavMenu,\n  SidebarContainer,\n  SidebarOverlay,\n  SidebarTitle,\n} from './Sidebar.styled'\nimport { SidebarIsOpenContext } from './AppLayout'\nimport { useIsMobile } from '../util/useIsMobile'\n\nconst Sidebar = () => {\n  const { sidebarIsOpen, setSidebarIsOpen } = useContext(SidebarIsOpenContext)\n  const isMobile = useIsMobile()\n  return (\n    <>\n      <SidebarContainer isOpen={sidebarIsOpen}>\n        <SidebarTitle>Zoo</SidebarTitle>\n        <ArrowLeftButton\n          src='/images/arrow_left.svg'\n          onClick={() => setSidebarIsOpen(false)}\n        />\n        <NavMenu>\n          <NavLink to='/tigers'>Tigers</NavLink>\n        </NavMenu>\n      </SidebarContainer>\n      {isMobile && sidebarIsOpen && (\n        <SidebarOverlay onClick={() => setSidebarIsOpen(false)} />\n      )}\n    </>\n  )\n}\n\nexport default Sidebar\n","import styled from '@emotion/styled'\nimport { Text } from '../styles/texts'\nimport { COLORS } from '../styles/colors'\n\nexport const TopBarContainer = styled.div`\n  height: 64px;\n  background-color: ${COLORS.WHITE};\n  display: flex;\n  border-bottom: 2px solid ${COLORS.GREY_LIGHT};\n`\n\nexport const ProfileDropDownContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  cursor: pointer;\n`\n\nexport const ProfilePhoto = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`\n\nexport const Username = styled(Text)`\n  font-weight: 700;\n  margin: 0 80px 0 3px;\n`\n","import React, { FC } from 'react'\nimport {\n  ProfileDropDownContainer,\n  ProfilePhoto,\n  TopBarContainer,\n  Username,\n} from './TopBar.styled'\nimport { useMutation, useQuery } from 'react-query'\nimport client from '../api'\nimport Menu, { MenuItem } from '../designSystem/Menu/Menu'\nimport { AxiosError } from 'axios'\nimport { ClickEvent } from '@szhsin/react-menu'\nimport { useHistory } from 'react-router-dom'\n\ntype UserReturnType = {\n  username: string\n}\n\ntype LogoutReturnType = {\n  message: string\n}\n\nconst ProfileDropDown: FC = () => {\n  const history = useHistory()\n\n  const { data: userData } = useQuery<UserReturnType>(\n    'user',\n    () => client.get('/auth/me').then(({ data }) => data),\n    {\n      retry: false,\n    }\n  )\n\n  const logoutMutation = useMutation<LogoutReturnType, AxiosError, ClickEvent>(\n    () => client.get('/auth/logout').then(({ data }) => data),\n    {\n      onSuccess: () => {\n        history.push('/login')\n      },\n    }\n  )\n\n  return (\n    <Menu\n      button={\n        <ProfileDropDownContainer>\n          <ProfilePhoto src='/images/user.svg' />\n          <Username>{userData?.username}</Username>\n        </ProfileDropDownContainer>\n      }\n      direction='bottom'\n    >\n      <MenuItem onClick={logoutMutation.mutate}>Logout</MenuItem>\n    </Menu>\n  )\n}\n\nconst TopBar: FC = () => (\n  <TopBarContainer>\n    <ProfileDropDown />\n  </TopBarContainer>\n)\n\nexport default TopBar\n","import styled from '@emotion/styled'\nimport { COLORS } from '../styles/colors'\n\nexport const AppContainer = styled.div`\n  min-height: 100vh;\n  min-width: 100vw;\n  display: flex;\n`\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow-y: auto;\n  background-color: ${COLORS.GREY_LIGHT};\n`\n","import React, { FC, useMemo, useState } from 'react'\nimport Sidebar from './Sidebar'\nimport TopBar from './TopBar'\nimport { AppContainer, MainContainer } from './AppLayout.styled'\nimport { useIsMobile } from '../util/useIsMobile'\n\nexport const SidebarIsOpenContext =\n  React.createContext<SidebarIsOpenContextType>(null as any)\ntype SidebarIsOpenContextType = {\n  sidebarIsOpen: boolean\n  setSidebarIsOpen: (value: boolean) => void\n}\n\nconst useSidebarIsOpenContext = () => {\n  const [sidebarIsOpen, setSidebarIsOpen] = useState<boolean>(false)\n  return useMemo(\n    () => ({\n      sidebarIsOpen,\n      setSidebarIsOpen,\n    }),\n    [sidebarIsOpen, setSidebarIsOpen]\n  )\n}\n\nconst AppLayout: FC = ({ children }) => {\n  const sidebarIsOpenContext = useSidebarIsOpenContext()\n\n  const isMobile = useIsMobile()\n  return (\n    <AppContainer>\n      <SidebarIsOpenContext.Provider value={sidebarIsOpenContext}>\n        <Sidebar />\n        <MainContainer>\n          {!isMobile && <TopBar />}\n          {children}\n        </MainContainer>\n      </SidebarIsOpenContext.Provider>\n    </AppContainer>\n  )\n}\n\nexport default AppLayout\n","import React, { FC, useContext } from 'react'\nimport Header, { HeaderTitle, NewButton, SearchBox } from '../shared/Header'\nimport Modal from '../designSystem/Modal/Modal'\nimport CreateTiger from './CreateTiger'\nimport { useIsMobile } from '../util/useIsMobile'\nimport BurgerButton from '../designSystem/BurgerButton/BurgerButton'\nimport { SidebarIsOpenContext } from '../shared/AppLayout'\nimport { useTigersSearchQuery } from './ListTiger'\n\ntype Props = {\n  modalIsOpen: boolean\n  setModalIsOpen: (value: boolean) => void\n}\n\nconst TigerHeader: FC<Props> = ({ modalIsOpen, setModalIsOpen }) => {\n  const { tigersSearchQuery, setTigersSearchQuery } = useTigersSearchQuery()\n  const { setSidebarIsOpen } = useContext(SidebarIsOpenContext)\n  const isMobile = useIsMobile()\n  return (\n    <Header>\n      {isMobile && <BurgerButton onClick={() => setSidebarIsOpen(true)} />}\n      <HeaderTitle>Tigers</HeaderTitle>\n      {!isMobile && (\n        <SearchBox\n          value={tigersSearchQuery}\n          onChange={(event) => setTigersSearchQuery(event.target.value)}\n        />\n      )}\n      <NewButton onClick={() => setModalIsOpen(true)}>New Tiger</NewButton>\n      <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n        <CreateTiger onSubmit={() => setModalIsOpen(false)} />\n      </Modal>\n    </Header>\n  )\n}\n\nexport default TigerHeader\n","import styled from '@emotion/styled'\nimport { COLORS } from '../../styles/colors'\n\nexport const EmptyPlaceholderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 160px;\n`\n\nexport const EmptyPlaceholderIcon = styled.img`\n  margin-bottom: 20px;\n`\n\nexport const EmptyPlaceholderText = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  color: ${COLORS.GREY_SLIGHTLY_DARK};\n`\n\nexport const EmptyPlaceholderButton = styled.button`\n  box-shadow: none;\n  border: none;\n  color: ${COLORS.WHITE};\n  background-color: ${COLORS.BLUE};\n  border-radius: 8px;\n  padding: 18px;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 14px;\n  margin-top: 32px;\n\n  &:active {\n    background-color: ${COLORS.BLUE_LIGHT};\n  }\n`\n","import React, { FC, HTMLAttributes } from 'react'\nimport {\n  EmptyPlaceholderButton,\n  EmptyPlaceholderContainer,\n  EmptyPlaceholderIcon,\n  EmptyPlaceholderText,\n} from './EmptyPlaceholder.styled'\n\ntype Props = {\n  text: string\n  buttonText: string\n}\n\nconst EmptyPlaceholder: FC<Props & HTMLAttributes<HTMLButtonElement>> = ({\n  buttonText,\n  text,\n  ...props\n}) => (\n  <EmptyPlaceholderContainer>\n    <EmptyPlaceholderIcon src='/images/empty.svg' />\n    <EmptyPlaceholderText>{text}</EmptyPlaceholderText>\n    <EmptyPlaceholderButton {...props}>{buttonText}</EmptyPlaceholderButton>\n  </EmptyPlaceholderContainer>\n)\n\nexport default EmptyPlaceholder\n","import client from '../api'\nimport React, { FC } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport TigerForm from './TigerForm'\nimport { Tiger } from '../types'\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\n\ntype Props = {\n  id: string | number\n  onSubmit?: () => void\n}\n\nconst UpdateTiger: FC<Props> = ({ id, onSubmit }) => {\n  const queryClient = useQueryClient()\n  const history = useHistory()\n\n  const { data, isLoading } = useQuery<Tiger>(['tigers', id], () =>\n    client.get(`/api/v1/tigers/${id}`).then((response) => response.data)\n  )\n\n  const updateTiger = useMutation<Tiger, any, Tiger>(\n    (values: Tiger) =>\n      client\n        .put(`/api/v1/tigers/${id}`, values)\n        .then((response) => response.data),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('tigers')\n      },\n    }\n  )\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  const tiger = data as Tiger\n  return (\n    <TigerForm\n      title='Edit Tiger'\n      tiger={tiger}\n      submitText='Edit Tiger'\n      onSubmit={(values, { setSubmitting }) => {\n        updateTiger.mutate(values)\n        setSubmitting?.(false)\n        onSubmit?.()\n        history.push('/tigers')\n      }}\n    />\n  )\n}\n\nexport default UpdateTiger\n","import React, { FC, useContext, useMemo, useState } from 'react'\nimport { useMutation, useQuery, useQueryClient } from 'react-query'\nimport client from '../api'\nimport { Tiger } from '../types'\nimport { Main } from '../shared/Main'\nimport CardList, { CardListItem } from '../designSystem/CardList/CardList'\nimport TigerHeader from './TigerHeader'\nimport EmptyPlaceholder from '../designSystem/EmptyPlaceholder/EmptyPlaceholder'\nimport UpdateTiger from './UpdateTiger'\n\nconst TigersSearchQueryContext =\n  React.createContext<TigersSearchQueryContextType>(undefined as any)\ntype TigersSearchQueryContextType = {\n  tigersSearchQuery: string\n  setTigersSearchQuery: (value: string) => void\n}\n\nexport const useTigersSearchQueryContext = () => {\n  const [tigersSearchQuery, setTigersSearchQuery] = useState<string>('')\n\n  return useMemo(\n    () => ({\n      tigersSearchQuery,\n      setTigersSearchQuery,\n    }),\n    [tigersSearchQuery, setTigersSearchQuery]\n  )\n}\n\nexport const useTigersSearchQuery = () => {\n  return useContext(TigersSearchQueryContext)\n}\n\nconst ListTigers: FC = () => {\n  const [modalIsOpen, setModalIsOpen] = useState<boolean>(false)\n  const tigersSearchQueryContext = useTigersSearchQueryContext()\n  const { tigersSearchQuery } = tigersSearchQueryContext\n\n  const queryClient = useQueryClient()\n  const tigersQuery = useQuery<Tiger[]>('tigers', () => {\n    return client\n      .get('/api/v1/tigers')\n      .then((response) => response.data) as Promise<Tiger[]>\n  })\n\n  const deleteTiger = useMutation<any, any, Partial<Tiger>>(\n    ({ id }) => {\n      return client.delete(`/api/v1/tigers/${id}`)\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('tigers')\n      },\n    }\n  )\n\n  // TODO: convert into server side search, here it's only client side\n  const queryFilter = ({ name }: Tiger) => name.includes(tigersSearchQuery)\n\n  return (\n    <TigersSearchQueryContext.Provider value={tigersSearchQueryContext}>\n      <TigerHeader modalIsOpen={modalIsOpen} setModalIsOpen={setModalIsOpen} />\n      <Main>\n        <CardList>\n          {tigersQuery.data?.filter(queryFilter)?.map((tiger) => (\n            <CardListItem\n              key={tiger.id}\n              title={tiger.name}\n              id={tiger.id}\n              onDelete={() => {\n                deleteTiger.mutate({ id: tiger.id })\n              }}\n              renderEditModalContent={({ setModalIsOpen }) => (\n                <UpdateTiger\n                  id={tiger.id!}\n                  onSubmit={() => setModalIsOpen(false)}\n                />\n              )}\n            />\n          ))}\n          {tigersQuery.data?.length === 0 && (\n            <EmptyPlaceholder\n              buttonText='Create a Tiger'\n              text='No tiger could be found'\n              onClick={() => {\n                setModalIsOpen(true)\n              }}\n            />\n          )}\n        </CardList>\n      </Main>\n    </TigersSearchQueryContext.Provider>\n  )\n}\n\nexport default ListTigers\n","import styled from '@emotion/styled'\nimport { COLORS } from '../styles/colors'\nimport { css, Global } from '@emotion/react'\nimport React from 'react'\nimport { LargeHeader } from '../styles/texts'\nimport { BREAKPOINTS } from '../styles/breakpoints'\n\nexport const GlobalBackground = () => (\n  <Global\n    styles={css`\n      html {\n        background-color: ${COLORS.BLUE_DARK};\n      }\n    `}\n  />\n)\n\ntype ImageProps = {\n  top?: number\n  left?: number\n  bottom: number\n  right: number\n}\n\nexport const Image = styled.img<ImageProps>`\n  position: absolute;\n  ${(props) =>\n    props.left &&\n    css`\n      left: ${props.left}px;\n    `}\n\n  ${(props) =>\n    props.top &&\n    css`\n      top: ${props.top}px;\n    `}\n  \n  ${(props) =>\n    props.bottom &&\n    css`\n      bottom: ${props.bottom}px;\n    `}\n  \n  ${(props) =>\n    props.right &&\n    css`\n      right: ${props.right}px;\n    `}\n  \n  ${css`\n    @media (max-width: ${BREAKPOINTS.MD}px) {\n      display: none;\n    }\n  `}\n`\n\nexport const Title = styled(LargeHeader)`\n  color: ${COLORS.WHITE};\n  font-weight: bold;\n  text-align: center;\n  margin-top: 96px;\n\n  @media (max-width: ${BREAKPOINTS.MD}px) {\n    margin-top: 72px;\n  }\n`\n","import React, { FC } from 'react'\nimport { GlobalBackground, Title } from './BackgroundLayout.styled'\n\nconst BackgroundLayout: FC = ({ children }) => {\n  return (\n    <>\n      <GlobalBackground />\n      <Title>Eventoo</Title>\n      {children}\n    </>\n  )\n}\n\nexport default BackgroundLayout\n","import React, { useState } from 'react'\nimport { Formik, FormikHelpers } from 'formik'\n\nimport { LoginValues } from '../types'\nimport client from '../api'\nimport { useHistory } from 'react-router-dom'\nimport { useQueryClient } from 'react-query'\nimport {\n  ErrorMessage,\n  FormCard,\n  FormInput,\n  FormLabel,\n  InputFormControl,\n  SubmitButton,\n  TextBlock,\n} from '../designSystem/Form/Form'\nimport { MediumHeader, Link } from '../styles/texts'\nimport { css } from '@emotion/css'\n\nfunction Login() {\n  const [error, setError] = useState<string>('')\n  const history = useHistory()\n  const queryClient = useQueryClient()\n\n  const initialValues: LoginValues = {\n    username: '',\n    password: '',\n  }\n\n  const handleError = (\n    error: any,\n    { setSubmitting }: Partial<FormikHelpers<LoginValues>>\n  ) => {\n    if (error.response && error.response.data) {\n      const { error: message } = error.response.data\n      message && setError(message)\n    }\n    setSubmitting?.(false)\n  }\n\n  const handleSubmit = async (\n    values: LoginValues,\n    { setSubmitting }: FormikHelpers<LoginValues>\n  ) => {\n    try {\n      await client.post('/auth/login', values)\n      setSubmitting?.(false)\n      await queryClient.invalidateQueries('user')\n      history.push('/')\n    } catch (error) {\n      handleError(error, { setSubmitting })\n    }\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={() => {\n        return {}\n      }}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <FormCard\n          className={css`\n            margin: 64px auto 64px auto;\n          `}\n        >\n          <MediumHeader\n            className={css`\n              text-align: center;\n            `}\n          >\n            Login\n          </MediumHeader>\n          <InputFormControl>\n            <FormLabel>Username</FormLabel>\n            <FormInput\n              type='text'\n              name='username'\n              placeholder='Username'\n              autoFocus\n            />\n          </InputFormControl>\n          <InputFormControl>\n            <FormLabel>Password</FormLabel>\n            <FormInput type='password' name='password' placeholder='Password' />\n          </InputFormControl>\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n          <TextBlock>\n            Don't have an account yet ? <Link to='/register'>register</Link>\n          </TextBlock>\n          <SubmitButton type='submit' disabled={isSubmitting}>\n            Login\n          </SubmitButton>\n        </FormCard>\n      )}\n    </Formik>\n  )\n}\n\nexport default Login\n","import React, { FC } from 'react'\nimport BackgroundLayout from '../shared/BackgroundLayout'\nimport LoginForm from './LoginForm'\n\nconst LoginPage: FC = () => {\n  return (\n    <BackgroundLayout>\n      <LoginForm />\n    </BackgroundLayout>\n  )\n}\n\nexport default LoginPage\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Formik, FormikHelpers } from 'formik'\nimport { RegisterValues } from '../types'\nimport api from '../api'\nimport {\n  ErrorMessage,\n  FormCard,\n  FormInput,\n  FormLabel,\n  InputFormControl,\n  SubmitButton,\n  TextBlock,\n} from '../designSystem/Form/Form'\nimport { Link, MediumHeader } from '../styles/texts'\nimport { css } from '@emotion/css'\n\nfunction Register() {\n  const [error, setError] = useState<string>('')\n  const history = useHistory()\n\n  const initialValues: RegisterValues = {\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirm: '',\n  }\n\n  const handleSubmit = async (\n    values: RegisterValues,\n    { setSubmitting }: FormikHelpers<RegisterValues>\n  ) => {\n    try {\n      await api.post('/auth/register', values)\n      await api.post('/auth/login', {\n        username: values.username,\n        password: values.password,\n      })\n      setSubmitting?.(false)\n      history.push('/')\n    } catch (error: any) {\n      if (error.response && error.response.data) {\n        const { error: message } = error.response.data\n        message && setError(message)\n      }\n      setSubmitting?.(false)\n    }\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={() => {\n        return {}\n      }}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <FormCard\n          className={css`\n            margin: 64px auto 64px auto;\n          `}\n        >\n          <MediumHeader\n            className={css`\n              text-align: center;\n            `}\n          >\n            Register\n          </MediumHeader>\n          <InputFormControl>\n            <FormLabel>Username</FormLabel>\n            <FormInput\n              type='text'\n              name='username'\n              placeholder='Username'\n              autoFocus\n            />\n          </InputFormControl>\n          <InputFormControl>\n            <FormLabel>Email</FormLabel>\n            <FormInput type='text' name='email' placeholder='Email' />\n          </InputFormControl>\n          <InputFormControl>\n            <FormLabel>Password</FormLabel>\n            <FormInput type='password' name='password' placeholder='Password' />\n          </InputFormControl>\n          <InputFormControl>\n            <FormLabel>Confirm Password</FormLabel>\n            <FormInput\n              type='password'\n              name='passwordConfirm'\n              placeholder='Confirm password'\n            />\n          </InputFormControl>\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n          <TextBlock>\n            Already have an account ? <Link to='/login'>login</Link>\n          </TextBlock>\n          <SubmitButton type='submit' disabled={isSubmitting}>\n            Register\n          </SubmitButton>\n        </FormCard>\n      )}\n    </Formik>\n  )\n}\n\nexport default Register\n","import React, { FC } from 'react'\nimport BackgroundLayout from '../shared/BackgroundLayout'\nimport RegisterForm from './RegisterForm'\n\nconst RegisterPage: FC = () => {\n  return (\n    <BackgroundLayout>\n      <RegisterForm />\n    </BackgroundLayout>\n  )\n}\n\nexport default RegisterPage\n","import { css, Global } from '@emotion/react'\n\nexport const GlobalStyles = () => (\n  <Global\n    styles={css`\n      html {\n        font-family: 'Lato', sans-serif !important;\n      }\n    `}\n  />\n)\n\nexport default GlobalStyles\n","import React, { useEffect } from 'react'\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\n\nimport ListTiger from './tigers/ListTiger'\n\nimport { useQuery } from 'react-query'\n\nimport client, { fetchCSRFToken, hasCSRFToken } from './api'\nimport LoginPage from './auth/LoginPage'\nimport RegisterPage from './auth/RegisterPage'\nimport GlobalStyles from './App.styled'\nimport AppLayout from './shared/AppLayout'\n\nfunction App() {\n  const history = useHistory()\n  useQuery('user', () => client.get('/auth/me').then(({ data }) => data), {\n    retry: false,\n    onError: () => history.replace('/login'),\n  })\n\n  useEffect(() => {\n    if (!hasCSRFToken()) fetchCSRFToken()\n  }, [])\n\n  return (\n    <>\n      <GlobalStyles />\n      <Switch>\n        <Redirect from='/' exact to='/tigers' />\n        {/* auth routes */}\n        <Route path='/login' component={LoginPage} />\n        <Route path='/register' component={RegisterPage} />\n        <AppLayout>\n          <Route path='/tigers' component={ListTiger} />\n        </AppLayout>\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <App />\n      </Router>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}